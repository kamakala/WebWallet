// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.920
// internal/views/add_asset.templ

package views

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import "webwallet/internal/models" // Potrzebne, bo Layout oczekuje danych portfolio

// AddAssetForm przyjmuje komunikat o błędzie lub sukcesie do wyświetlenia użytkownikowi.
func AddAssetForm(message string) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = Layout("Dodaj Nowe Aktywo", RenderAddAssetContent(message), &models.InvestmentPortfolio{}, "", "", "", 0, 0).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

// RenderAddAssetContent to pomocniczy komponent renderujący samą zawartość formularza.
// Jest oddzielony, aby można go było łatwo przekazać do Layout.
func RenderAddAssetContent(message string) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var2 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var2 == nil {
			templ_7745c5c3_Var2 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div class=\"form-container\"><h2>Dodaj Nowe Aktywo</h2>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if message != "" {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "<p class=\"message\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var3 string
			templ_7745c5c3_Var3, templ_7745c5c3_Err = templ.JoinStringErrs(message)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/views/add_asset.templ`, Line: 20, Col: 40}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var3))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "</p>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "<form action=\"/add-asset\" method=\"POST\"><div class=\"form-group\"><label for=\"name\">Nazwa Aktywa:</label> <input type=\"text\" id=\"name\" name=\"name\" required></div><div class=\"form-group\"><label for=\"symbol\">Symbol (np. SPX):</label> <input type=\"text\" id=\"symbol\" name=\"symbol\" required></div><div class=\"form-group\"><label for=\"type\">Typ (np. Akcje, Gotówka, ETF, Obligacje):</label> <input type=\"text\" id=\"type\" name=\"type\" required></div><div class=\"form-group\"><label for=\"quantity\">Ilość:</label> <input type=\"number\" id=\"quantity\" name=\"quantity\" step=\"0.01\" min=\"0\" required></div><div class=\"form-group\"><label for=\"avgCost\">Średni Koszt Zakupu (za jednostkę):</label> <input type=\"number\" id=\"avgCost\" name=\"avgCost\" step=\"0.01\" min=\"0\" required></div><div class=\"form-group\"><label for=\"currentPrice\">Obecna wartość rynkowa (za jednostkę):</label> <input type=\"number\" id=\"currentPrice\" name=\"currentPrice\" step=\"0.01\" min=\"0\" required></div><div class=\"form-group\"><label for=\"walletType\">Rodzaj portfela (Poduszka Finansowa, Portfel Długoterminowy lub Portfel Krótkoteminowy):</label> <input type=\"text\" id=\"walletType\" name=\"walletType\" required></div><button type=\"submit\">Dodaj Aktywo</button></form><p><a href=\"/\" class=\"update-button\">Powrót do portfela</a></p></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
